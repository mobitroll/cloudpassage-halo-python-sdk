{
  "policy": {
    "name": "CPAPI TEST CIS Benchmark for CentOS 7 v1",
    "description": "This policy helps you to verify the security of servers that are hardened according to the consensus guidance put forth by the Center for Internet Security (CIS) document \"CIS CentOS Linux 7 Benchmark v1.1.0 04-02-2015\". The policy detects deviations in your servers' configurations from the Benchmark specifications. You may wish to explicitly harden your servers by following the Benchmark suggestions before scanning with this policy. \r\n\r\n Several rules in this policy are by default deactivated, for one of the following reasons: \r\n - A rule includes configuration checks that Halo does not perform at this time. \r\n - A rule includes configuration checks that look for dangerous settings that, if set, would prevent remote access to the server. \r\n\r\n You can activate those rules if and when your server configurations make them appropriate, or when new Halo checks become available.",
    "platform": "linux",
    "template": true,
    "url": "https://portal.cloudpassage.com/v1/policies/f7459be01c5711e5b8dd05741f3c0727",
    "id": "f7459be01c5711e5b8dd05741f3c0727",
    "used_by": [],
    "rules": [
      {
        "active": true,
        "alert": false,
        "comment": "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications. Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In addition, making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.1 Create Separate Partition for /tmp",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For new installations, check the box to \"Review and modify partitioning\" and create a separate partition for /tmp.\n\nFor systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\s\\/tmp\\s"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The nodev mount option specifies that the filesystem cannot contain special devices. Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.2 Set nodev option for /tmp Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options). \nSee the fstab(5) manual page for more information.\n\n# mount -o remount, nodev /tmp",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/tmp.*nodev"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The nosuid mount option specifies that the filesystem cannot contain set userid files. Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create set userid files in /tmp. \n # mount -o remount,nosuid /tmp",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.3 Set nosuid option for /tmp Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options). \nSee the fstab(5) manual page for more information.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/tmp.*nosuid"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The noexec mount option specifies that the filesystem cannot contain executable binaries. Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.4 Set noexec option for /tmp Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options). \nSee the fstab(5) manual page for more information. Example:\n\n# mount -o remount,noexec /tmp",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/tmp.*noexec"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.5 Create Separate Partition for /var",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For new installations, check the box to \"Review and modify partitioning\" and create a separate partition for /var.\n\nFor systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/var\\s"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /var/tmp directory is normally a standalone directory in the /var file system. Binding /var/tmp to /tmp establishes an unbreakable link to /tmp that cannot be removed (even by the root user). It also allows /var/tmp to inherit the same mount options that /tmp owns, allowing /var/tmp to be protected in the same /tmp is protected. It will also prevent /var from filling up with temporary files as the contents of /var/tmp will actually reside in the file system containing /tmp. All programs that use /var/tmp and /tmp to read/write temporary files will always be written to the /tmp file system, preventing a user from running the /var file system out of space or trying to perform operations that have been blocked in the /tmp filesystem.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.6 Bind Mount the /var/tmp directory to /tmp",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# mount --bind /tmp /var/tmp\nand edit the /etc/fstab file to contain the following line:\n/tmp /var/tmp none bind 0 0",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "^\\/tmp.*\\/var\\/tmp.*bind"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /var/log directory is used by system services to store log data . There are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit data.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.7 Create Separate Partition for /var/log",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For new installations, check the box to \"Review and modify partitioning\" and create a separate partition for /var/log.\n\nFor systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/var\\/log\\s"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.7"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The auditing daemon, auditd, stores log data in the /var/log/audit directory. There are two important reasons to ensure that data gathered by auditd is stored on a separate partition: protection against resource exhaustion (since the audit.log file can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions based on the results. If other processes (such as syslog) consume space in the same partition as auditd, it may not perform as desired.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.8 Create Separate Partition for /var/log/audit",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For new installations, check the box to \"Review and modify partitioning\" and create a separate partition for /var/log/audit.\n\nFor systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/var\\/log\\/audit\\s"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.8"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /home directory is used to support disk storage needs of local users. If the system is intended to support local users, create a separate partition for the /home directory to protect against resource exhaustion and restrict the type of files that can be stored under /home.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.9 Create Separate Partition for /home",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For new installations, check the box to \"Review and modify partitioning\" and create a separate partition for /home.\n\nFor systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/home\\s"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.9"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "When set on a file system, this option prevents character and block special devices from being defined, or if they exist, from being used as character and block special devices. Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices. \n NOTE: The actions in the item refer to the /home partition. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.10 Add nodev Option to /home",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options).\nSee the fstab(5) manual page for more information.\n\n# mount -o remount,nodev /home",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/home.*nodev"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.10"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Set nodev on removable media to prevent character and block special devices that are present on the removable be treated as these device files. Removable media containing character and block special devices could be used to circumvent security controls by allowing non-root users to access sensitive device files such as /dev/kmem or the raw disk partitions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.11 Add nodev Option to Removable Media Partitions",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add \"nodev\" to the fourth field (mounting options). Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.11"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Set noexec on removable media to prevent programs from executing from the removable media. Setting this option on a file system prevents users from executing programs from the removable. This deters users from being to introduce potentially malicious software on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.12 Add noexec Option to Removable Media Partitions",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options). Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.12"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Set nosuid on removable media to prevent setuid and setgid executable files that are on that media from being executed as setuid and setgid. Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.13 Add nosuid Option to Removable Media Partitions",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options). Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.13"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The nodev mount option specifies that the /dev/shm (temporary filesystem stored in memory) cannot contain block or character special devices. Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.14 Add nodev Option to /dev/shm Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options of entries that have mount points that contain /dev/shm.\nSee the fstab(5) manual page for more information.\n\n# mount -o remount,nodev /dev/shm",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/dev\\/shm.*nodev"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.14"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The nosuid mount option specifies that the /dev/shm (temporary filesystem stored in memory) will not execute setuid and setgid on executable programs as such, but rather execute them with the uid and gid of the user executing the program. Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.15 Add nosuid Option to /dev/shm Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options).\nLook for entries that have mount points that contain /dev/shm. See the fstab(5) more information.\n\n# mount -o remount,nosuid /dev/shm",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/dev\\/shm.*nosuid"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.15"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set noexec on the shared memory partition to prevent programs from executing from there. Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.16 Add noexec Option to /dev/shm Partition",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options).\nLook for entries that have mount points that contain /dev/shm. See the fstab(5) manual page for more information.\n\n# mount -o remount,noexec /dev/shm",
            "files": "/etc/fstab",
            "present": true,
            "patterns": "\\/dev\\/shm.*noexec"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.16"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them. This feature prevents the ability to delete or rename files in world writable directories (such as /tmp) that are owned by another user.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.17 Set Sticky Bit on All World-Writable Directories",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "world_writable_directories_have_sticky_bit_set",
            "active": true,
            "exportable": true,
            "suggestion": "Run the following command:\n# df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null | xargs chmod a+t",
            "exclude_directories": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.17"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.18 Disable Mounting of cramfs Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall cramfs /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+cramfs\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.18"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.19 Disable Mounting of freevxfs Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall freevxfs /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+freevxfs\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.19"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.20 Disable Mounting of jffs2 Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall jffs2 /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+jffs2\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.20"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.21 Disable Mounting of hfs Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall hfs /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+hfs\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.21"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.22 Disable Mounting of hfsplus Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall hfsplus /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+hfsplus\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.22"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs). A squashfs image can be used without having to first decompress the image. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.23 Disable Mounting of squashfs Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall squashfs /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+squashfs\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.23"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats. Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.1.24 Disable Mounting of udf Filesystems",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line:\n\ninstall udf /bin/true",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^install\\s+udf\\s+\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.1.24"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "CentOS cryptographically signs updates with a GPG key to verify that they are valid. It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.2.1 Verify CentOS GPG Key is Installed",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Compare the GPG key with the one from CentOS's web site at http://mirror.centos.org/centos/. The following command can be used to print the installed release key's fingerprint, which is actually contained in the file referenced below:\n\n# gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.2.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The gpgcheck option, found in the main section of the /etc/yum.conf file determines if an RPM package's signature is always checked prior to its installation. It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.2.2 Verify that gpgcheck is Globally Activated",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/yum.conf file and set the gpgcheck to 1 as follows:\n\ngpgcheck=1",
            "config_file_path": "/etc/yum.conf",
            "config_file_section": "",
            "config_item": "gpgcheck",
            "desired_value": "1",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.2.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The yum update utility performs software updates, including dependency analysis, based on repository metadata and can be run manually from the command line, invoked from one of the provided front-end tools, or configured to run automatically at specified intervals. The yum update utility is the preferred method to update software since it checks for dependencies and ensures that the software is installed correctly. Refer to your local patch management procedures for the method used to perform yum updates.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.2.3 Obtain Software Package Updates with yum",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum update",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.2.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "RPM has the capability of verifying installed packages by comparing the installed files against the file information stored in the package. Verifying packages gives a system administrator the ability to detect if package files were changed, which could indicate that a valid binary was overwritten with a trojaned binary.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.2.4 Verify Package Integrity Using RPM",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Address unexpected discrepancies identified in the audit step.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.2.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "In some installations, AIDE is not installed automatically. Install AIDE to make use of the file integrity features to monitor critical files for changes that could affect the security of the system.\n\n[Halo NOTE: CloudPassage Halo includes File Integrity Monitoring suitable for detecting changes in critical files.]",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.3.1 Install AIDE",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Use yum to install AIDE (-y option may be used to assume yes at all prompts):\n\n# yum install aide\n\naide.  installed\n\nInitialize AIDE:\n\n# /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'\n\nNOTE: The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Set PRELINKING=no in /etc/sysconfig/prelink and run /usr/sbin/prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.3.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Implement periodic file checking, in compliance with site policy. Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.\n\n[Halo NOTE: CloudPassage Halo includes File Integrity Monitoring suitable for detecting changes in critical files.]",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.3.2 Implement Periodic Execution of File Integrity",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Execute the following command:\n\n# crontab -u root -e\n\nAdd the following line to the crontab:\n\n0 5 * * * /usr/sbin/aide --check\n\nNOTE: The checking in this instance occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.3.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters SELinux must be enabled at boot time in /boot/grub2/grub.cfg to ensure that the controls it provides are not overwritten.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.1 Enable SELinux in /boot/grub2/grub.cfg",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Remove all instances of selinux=0 from /boot/grub2/grub.cfg.",
            "files": "/boot/grub2/grub.cfg",
            "present": false,
            "patterns": "selinux\\s*=\\s*0"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Remove all instances of enforcing=0 from /boot/grub2/grub.cfg.",
            "files": "/boot/grub2/grub.cfg",
            "present": false,
            "patterns": "enforcing\\s*=\\s*0"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set SELinux to enable when the system is booted. SELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.2 Set the SELinux State",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/selinux/config file to set the SELINUX parameter: SELINUX=enforcing",
            "config_file_path": "/etc/selinux/config",
            "config_file_section": "",
            "config_item": "SELINUX",
            "desired_value": "enforcing",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only. Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.3 Set the SELinux Policy",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\nSELINUXTYPE=targeted\nNote: If your organization requires stricter policies, make sure they are added to the /etc/selinux/config file.",
            "config_file_path": "/etc/selinux/config",
            "config_file_section": "",
            "config_item": "SELINUXTYPE",
            "desired_value": "targeted",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The SETroubleshoot service notifies desktop users of SELinux denials through a user-friendly interface. The service provides important information around configuration errors, unauthorized intrusions, and other potential errors. The SETroubleshoot service is an unnecessary daemon to have running on a server, especially if X Windows is disabled.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.4 Remove SETroubleshoot",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase setroubleshoot",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The mcstransd daemon provides category label information to client processes requesting information. The label translations are defined in /etc/selinux/targeted/setrans.conf Since this service is not used very often, disable it to reduce the amount of potentially vulnerable code running on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.5 Remove MCS Translation Service (mcstrans)",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase mcstrans",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.5"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Daemons that are not defined in SELinux policy will inherit the security context of their parent process. Since daemons are launched and descend from the init process, they will inherit the security context label initrc_t. This could cause the unintended consequence of giving the process more permission than it requires.\n\n[Halo NOTE: The daemons \"cphalo\" and \"cphalow\" inherit the initrc_t security context in order to perform their necessary functions.]",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.4.6 Check for Unconfined Daemons",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Investigate any unconfined daemons found during the audit action.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.4.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set the owner and group of /boot/grub2/grub.cfgto the root user. Setting the owner and group to root prevents non-root users from changing the file.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.5.1 Set User/Group Owner on /boot/grub2/grub.cfg",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /boot/grub2/grub.cfg",
            "files": "/boot/grub2/grub.cfg",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /boot/grub2/grub.cfg",
            "files": "/boot/grub2/grub.cfg",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.5.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set permission on the /boot/grub2/grub.cfg file to read and write for root only. Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.5.2 Set Permissions on /boot/grub2/grub.cfg",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /boot/grub2/grub.cfg",
            "files": "/boot/grub2/grub.cfg",
            "acls": "*00"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.5.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters. Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time).\n\n[Halo NOTE: This is a dangerous rule if you're using cloud services that restrict your access to command line boot parameters. You may not be able to access your systems.]",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.5.3 Set Boot Loader Password",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Create an encrypted password with grub-md5-crypt:\n# grub2-mkpasswd-pbkdf2 \nEnter password: <password> \nReenter password: <password>\nYour PBKDF2 is <encrypted-password>\n\nAdd the following into /etc/grub.d/00_header or a custom /etc/grub.d configuration file:\ncat <<EOF\nset superusers=\"<user-list>\"\npassword_pbkdf2 <user> <encrypted-password> \nEOF\n\nRun the following to update the grub configuration:\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
            "files": "/boot/grub2/grub.cfg",
            "present": true,
            "patterns": "^password"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.5.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user. Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5)). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.6.1 Restrict Core Dumps",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/security/limits.conf: \n* hard core 0",
            "files": "/etc/security/limits.conf",
            "present": true,
            "patterns": "^\\*\\s*hard\\s*core\\s*0"
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/sysctl.conf file:\nfs.suid_dumpable = 0",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "fs.suid_dumpable",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.6.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set the system flag to force randomized virtual memory region placement. Randomly placing virtual memory regions will make it difficult for to write memory page exploits as the memory placement will be consistently shifting.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.6.2 Enable Randomized Virtual Memory Region Placement",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/sysctl.conf file:\nkernel.randomize_va_space = 2",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "kernel.randomize_va_space",
            "desired_value": "2",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.6.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Periodically, CentOS releases updates to the CentOS operating system to support new hardware platforms, deliver new functionality as well as the bundle together a set of patches that can be tested as a unit. Newer updates may contain security enhancements that would not be available through the standard patching process. As a result, it is recommended that the latest update of the CentOS software be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "1.7 Use the Latest OS Release",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Use the latest update when installing new systems and upgrade to or reinstall with the latest update as appropriate for existing systems.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "1.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The telnet-server package contains the telnetd daemon, which accepts connections from users from other systems via the telnet protocol. The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.1 Remove telnet-server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase telnet-server",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol. The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an authorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.2 Remove telnet Clients",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase telnet",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Berkeley rsh-server (rsh, rlogin, rcp) package contains legacy services that exchange credentials in clear-text. These legacy service contain numerous security exposures and have been replaced with the more secure SSH package.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.3 Remove rsh-server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase rsh-server",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The rsh package contains the client commands for the rsh services. These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh package removes the clients for rsh, rcp and rlogin.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.4 Remove rsh",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase rsh",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client (ypbind) was used to bind a machine to an NIS server and receive the distributed configuration files. The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.5 Remove NIS Client",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase ypbind",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.5"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files. The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be disabled and other, more secure services be used",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.6 Remove NIS Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase ypserv",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.6"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Trivial File Transfer Protocol (TFTP) is a simple file transfer protocol, typically used to automatically transfer configuration or boot files between machines. TFTP does not support authentication and can be easily hacked. The package tftp is a client program that allows for connections to a tftp server. It is recommended that TFTP be removed, unless there is a specific need for TFTP (such as a boot server). In that case, use extreme caution when configuring the services.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.7 Remove tftp",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase tftp",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Trivial File Transfer Protocol (TFTP) is a simple file transfer protocol, typically used to automatically transfer configuration or boot machines from a boot server. The package tftp-server is the server package used to define and support a TFTP server. TFTP does not support authentication nor does it ensure the confidentiality of integrity of data. It is recommended that TFTP be removed, unless there is a specific need for TFTP. In that case, extreme caution must be used when configuring the services.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.8 Remove tftp-server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase tftp-server",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.8"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client (allows initialization of talk sessions) is installed by default. The software presents a security risk as it uses unencrypted protocols for communication.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.9 Remove talk",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase talk",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.9"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client (allows initiate of talk sessions) is installed by default. The software presents a security risk as it uses unencrypted protocols for communication.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.10 Remove talk-server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase talk-server",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.10"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The eXtended InterNET Daemon (xinetd) is an open source super daemon that replaced the original inetd daemon. The xinetd daemon listens for well known services and dispatches the appropriate daemon to properly respond to service requests. If there are no xinetd services required, it is recommended that the daemon be deleted from the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.11 Remove xinetd",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase xinetd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.11"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "chargen-dgram is a network service that responds with 0 to 512 ASCII characters for each datagram it receives. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.12 Disable chargen-dgram",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the chargen-dgram service by running the following command:\n\n# chkconfig chargen-dgram off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.12"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "chargen-stream is a network service that responds with 0 to 512 ASCII characters for each connection it receives. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.13 Disable chargen-stream",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the chargen-stream service by running the following command:\n\n# chkconfig chargen-stream off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.13"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "daytime-dgram is a network service that responds with the server's current date and time. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.14 Disable daytime-dgram",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the daytime-dgram service by running the following command:\n\n# chkconfig daytime-dgram off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.14"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "daytime-stream is a network service that responds with the server's current date and time. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.15 Disable daytime-stream",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the daytime-stream service by running the following command:\n\n# chkconfig daytime-stream off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.15"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "echo-dgram is a network service that responds to clients with the data sent to it by the client. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.16 Disable echo-dgram",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the echo-dgram service by running the following command:\n\n# chkconfig echo-dgram off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.16"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "echo-stream is a network service that responds to clients with the data sent to it by the client. This service is intended for debugging and testing purposes. It is recommended that this service be disabled. Disabling this service will reduce the remote attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.17 Disable echo-stream",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the echo-stream service by running the following command:\n\n# chkconfig echo-stream off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.17"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "tcpmux-server is a network service that allows a client to access other network services running on the server. It is recommended that this service be disabled. tcpmux-server can be abused to circumvent the server's host based firewall. Additionally, tcpmux-server can be leveraged by an attacker to effectively port scan the server.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "2.1.18 Disable tcpmux-server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Disable the tcpmux-server service by running the following command:\n\n# chkconfig tcpmux-server off",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "2.1.18"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set the default umask for all processes started at boot time. The settings in umask selectively turn off default permission when a file is created by a daemon process. Setting the umask to 027 will make sure that files created by daemons will not be readable, writable or executable by any other than the group and owner of the daemon process and will not be writable by the group of the daemon process. The daemon process can manually override these settings if these files need additional permission.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.1 Set Daemon umask",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/sysconfig/init file:\n\numask 027",
            "config_file_path": "/etc/sysconfig/init",
            "config_file_section": "",
            "config_item": "umask",
            "desired_value": "027",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The X Window system provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Window system is typically used on desktops where users login, but not on servers where users typically do not login. Unless your organization specifically requires graphical login access via the X Window System, remove the server to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.2 Remove the X Window System",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Change the default runlevel to multi user without X:\n\n# cd /etc/lib/systemd/system/\n# unlink default.target\n# ln -s /usr/lib/systemd/system/multi-user.target default.target\n\nUninstall the X Window Server:\n\n# yum remove xorg-x11-server-common",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine. Since servers are not normally used for printing, this service is not needed unless dependencies require it. If this is the case, disable the service to reduce the potential attack surface. If for some reason the service is required on the server, follow the recommendations in sub-sections 3.2.1 - 3.2.5 to secure it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.3 Disable Avahi Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl disable avahi-daemon",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability. If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be disabled to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.4  Disable Print Server - CUPS",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "systemctl disabled cups",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. Unless a server is specifically set up to act as a DHCP server, it is recommended that this service be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.5 Remove DHCP Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase dhcp",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Network Time Protocol (NTP) is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. The version of NTP delivered with CentOS can be found at http://www.ntp.org [http://www.ntp.org]. NTP can be configured to be a client and/or a server. It is recommended that physical systems and virtual guests lacking direct access to the physical host's clock be configured as NTP clients to synchronize their clocks (especially to support time sensitive security mechanisms like Kerberos). This also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.6 Configure Network Time Protocol (NTP)",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following restrict parameters in /etc/ntp.conf:\nrestrict default kod nomodify notrap nopeer noquery\nrestrict -6 default kod nomodify notrap nopeer noquery",
            "files": "/etc/ntp.conf",
            "present": true,
            "patterns": "^restrict\\s*default"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following restrict parameters in /etc/ntp.conf:\nrestrict default kod nomodify notrap nopeer noquery\nrestrict -6 default kod nomodify notrap nopeer noquery",
            "files": "/etc/ntp.conf",
            "present": true,
            "patterns": "^restrict\\s*\\-6\\s*default"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Also, make sure /etc/ntp.conf has an NTP server specified: server <ntp-server>\nNote: <ntp-server> is the IP address or hostname of a trusted time server. \nConfiguring an NTP server is outside the scope of this benchmark.",
            "files": "/etc/ntp.conf",
            "present": true,
            "patterns": "^server"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.6"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database. The default client/server LDAP application for CentOS is OpenLDAP. If the server will not need to act as an LDAP client or server, it is recommended that the software be disabled to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.7 Remove LDAP",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "If LDAP is running on the system and is not needed, remove it as follows:\n\n# yum erase openldap-servers\n# yum erase openldap-clients",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network. If the server does not export NFS shares or act as an NFS client, it is recommended that these services be disabled to reduce remote attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.8 Disable NFS and RPC",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl disable nfslock\n# systemctl disable rpcgssd\n# systemctl disable rpcbind\n# systemctl disable rpcidmapd\n# systemctl disable rpcsvcgssd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.8"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network. Unless a server is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.9 Remove DNS Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase bind",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.9"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files. FTP does not protect the confidentiality of data or authentication credentials. It is recommended sftp be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.10 Remove FTP Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase vsftpd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "HTTP or web servers provide the ability to host web site content. The default HTTP server shipped with CentOS Linux is Apache. Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.11 Remove HTTP Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase httpd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.11"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Dovecot is an open source IMAP and POP3 server for Linux based systems. Unless POP3 and/or IMAP servers are to be provided to this server, it is recommended that the service be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.12 Remove Dovecot (IMAP and POP3 services)",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase dovecot",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.12"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Small Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems. If there is no need to mount directories and file systems to Windows systems, then this service can be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.13 Remove Samba",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase samba",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.13"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The default HTTP proxy package shipped with CentOS Linux is squid. If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.14 Remove HTTP Proxy Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase squid",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.14"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system. The SNMP server communicates using SNMP v1, which transmits data in the clear and does not require authentication to execute commands. Unless absolutely necessary, it is recommended that the SNMP service not be used.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.15 Remove SNMP Server",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum erase net-snmp",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.15"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail. By default, the MTA is set to loopback mode on CentOS. The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "3.16 Configure Mail Transfer Agent for Local-Only Mode",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below.\n\ninet_interfaces = localhost\n\n# Execute the following command to restart postfix\n# service postfix restart",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "3.16"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The net.ipv4.ip_forward flag is used to tell the server whether it can forward packets or not. If the server is not to be used as a router, set the flag to 0. Setting the flag to 0 ensures that a server with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.1.1 Disable IP Forwarding",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.ip_forward parameter to 0 in /etc/sysctl.conf:\nnet.ipv4.ip_forward=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.ip_forward=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.ip_forward",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects. An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.1.2 Disable Send Packet Redirects",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameter inside of /etc/sysctl.conf:\nnet.ipv4.conf.all.send_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.send_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.send_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.all.send_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameter inside of /etc/sysctl.conf:\nnet.ipv4.conf.default.send_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.send_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.send_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.default.send_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used. Setting net.ipv4.conf.all.accept_source_route and net.ipv4.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this server was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the server as a way to reach the private address servers. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.1 Disable Source Routed Packet Acceptance",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv4.conf.all.accept_source_route = 0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0\n# /sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.all.accept_source_route",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv4.conf.default.accept_source_route = 0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0\n# /sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.default.accept_source_route",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables. Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.2 Disable ICMP Redirect Acceptance",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv4.conf.all.accept_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.all.accept_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv4.conf.default.accept_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv4.conf.default.accept_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure. It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.3 Disable Secure ICMP Redirect Acceptance",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.conf.all.secure_redirects and\nnet.ipv4.conf.default.secure_redirects parameters to 0 in /etc/sysctl.conf:\nnet.ipv4.conf.all.secure_redirects=0\nnet.ipv4.conf.default.secure_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/proc/sys/net/ipv4/conf/all/secure_redirects",
            "config_file_section": "",
            "config_item": "",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": ""
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.conf.all.secure_redirects and\nnet.ipv4.conf.default.secure_redirects parameters to 0 in /etc/sysctl.conf:\nnet.ipv4.conf.all.secure_redirects=0\nnet.ipv4.conf.default.secure_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/proc/sys/net/ipv4/conf/default/secure_redirects",
            "config_file_section": "",
            "config_item": "",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "When enabled, this feature logs packets with un-routable source addresses to the kernel log. Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their server.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.4 Log Suspicious Packets",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians parameters to 1 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.log_martians=1\nnet.ipv4.conf.default.log_martians=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.conf.all.log_martians=1\n# /sbin/sysctl -w net.ipv4.conf.default.log_martians=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses. Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.5 Enable Ignore Broadcast Requests",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.icmp_echo_ignore_broadcasts parameter to 1 in /etc/sysctl.conf:\n\nnet.ipv4.icmp_echo_ignore_broadcasts=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.5"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages. Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.6 Enable Bad Error Message Protection",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.icmp_ignore_bogus_error_responses parameter to 1 in /etc/sysctl.conf:\n\nnet.ipv4.icmp_ignore_bogus_error_responses=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set). Setting these flags is a good way to deter attackers from sending your server bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This is would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your server, you will not be able to enable this feature without breaking the routing.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.7 Enable RFC-recommended Source Route Validation",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter parameters to 1 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.rp_filter=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.conf.all.rp_filter=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/proc/sys/net/ipv4/conf/all/rp_filter",
            "config_file_section": "",
            "config_item": "",
            "desired_value": "1",
            "comment_character": "#",
            "delimiter": ""
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter parameters to 1 in /etc/sysctl.conf:\n\nnet.ipv4.conf.default.rp_filter=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.conf.default.rp_filter=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "config_file_path": "/proc/sys/net/ipv4/conf/default/rp_filter",
            "config_file_section": "",
            "config_item": "",
            "desired_value": "1",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the server to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue. Attackers use SYN flood attacks to perform a denial of service attacked on a server by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the server to keep accepting valid connections, even if under a denial of service attack.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.2.8 Enable TCP SYN Cookies",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the net.ipv4.tcp_syncookies parameter to 1 in /etc/sysctl.conf:\n\nnet.ipv4.tcp_syncookies=1\n\nModify active kernel parameters to match:\n\n# /sbin/sysctl -w net.ipv4.tcp_syncookies=1\n# /sbin/sysctl -w net.ipv4.route.flush=1",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.2.8"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Wireless networking is used when wired networks are unavailable. CentOS contains a wireless tool kit to allow system administrators to configure and use wireless networks. If wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.3.1 Deactivate Wireless Interfaces",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Use the following commands to list all interfaces and identify devices with wireless interfaces. Once identified, shutdown the interface and remove it.\n\n# ip link show\n# iw list\n# ip link set <interface> down\n# rm /etc/sysconfig/network-scripts/ifcfg-<interface>",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.3.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "This setting disables the systems ability to accept router advertisements It is recommended that systems not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.4.1.1 Disable IPv6 Router Advertisements",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv6.conf.all.accept_ra=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv6.conf.all.accept_ra=0\n# /sbin/sysctl -w net.ipv6.conf.default.accept_ra=0\n# /sbin/sysctl -w net.ipv6.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv6.conf.all.accept_ra",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv6.conf.default.accept_ra=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv6.conf.all.accept_ra=0\n# /sbin/sysctl -w net.ipv6.conf.default.accept_ra=0\n# /sbin/sysctl -w net.ipv6.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv6.conf.default.accept_ra",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.4.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "This setting prevents the system from accepting ICMP redirects. ICMP redirects tell the system about alternate routes for sending traffic. It is recommended that systems not accept ICMP redirects as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.4.1.2 Disable IPv6 Redirect Acceptance",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv6.conf.all.accept_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0\n# /sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0\n# /sbin/sysctl -w net.ipv6.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv6.conf.all.accept_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the following parameters inside of /etc/sysctl.conf:\nnet.ipv6.conf.default.accept_redirects=0\n\nModify active kernel parameters to match:\n# /sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0\n# /sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0\n# /sbin/sysctl -w net.ipv6.route.flush=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv6.conf.default.accept_redirects",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.4.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Although IPv6 has many advantages over IPv4, few organizations have implemented IPv6. If IPv6 is not to be used, it is recommended that it be disabled to reduce the attack surface of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.4.2 Disable IPv6",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Ensure net.ipv6.conf.all.disable_ipv6 is set to 1 in /etc/sysctl.conf:\nnet.ipv6.conf.all.disable_ipv6=1\n\nModify active kernel parameters to match:\n/sbin/sysctl net.ipv6.conf.all.disable_ipv6=1",
            "config_file_path": "/etc/sysctl.conf",
            "config_file_section": "",
            "config_item": "net.ipv6.conf.all.disable_ipv6",
            "desired_value": "1",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.4.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "TCP Wrappers provides a simple access list and standardized logging method for services capable of supporting it. In the past, services that were called from inetd and xinetd supported the use of tcp wrappers. As inetd and xinetd have been falling in disuse, any service that can support tcp wrappers will have the libwrap.so library attached to it. TCP Wrappers provide a good simple access list mechanism to services that may not have that support built in. It is recommended that all services that can support TCP Wrappers, use it.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.5.1 Install TCP Wrappers",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum install tcp_wrappers\n\nTo verify if a service supports TCP Wrappers, run the following command:\n# ldd  | grep libwrap.so\n\nIf there is any output, then the service supports TCP Wrappers.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.5.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/hosts.allow file specifies which IP addresses are permitted to connect to the host. It is intended to be used in conjunction with the /etc/hosts.deny file. The /etc/hosts.allow file supports access control by IP and helps ensure that only authorized systems can connect to the server.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.5.2 Create /etc/hosts.allow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Create /etc/hosts.allow:\n# echo \"ALL: <net>/<mask>, <net>/<mask>, ...\" >/etc/hosts.allow\n\nwhere each <net>/<mask> combination (for example, \"192.168.1.0/255.255.255.0\") represents one network block in use by your organization that requires access to this system.",
            "files": "/etc/hosts.allow",
            "present": true
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.5.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/hosts.allow file contains networking information that is used by many applications and therefore must be readable for these applications to operate. It is critical to ensure that the /etc/hosts.allow file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.5.3 Verify Permissions on /etc/hosts.allow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "If the permissions of the /etc/hosts.allow file are incorrect, run the following command to correct them:\n/bin/chmod 644 /etc/hosts.allow",
            "files": "/etc/hosts.allow",
            "acls": "644"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.5.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/hosts.deny file specifies which IP addresses are NOT permitted to connect to the host. It is intended to be used in conjunction with the /etc/hosts.allow file. The /etc/hosts.deny file serves as a failsafe so that any host not specified in /etc/hosts.allow is denied access to the server.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.5.4 Create /etc/hosts.deny",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Create /etc/hosts.deny:\n\n# echo \"ALL: ALL\" >> /etc/hosts.deny",
            "config_file_path": "/etc/hosts.deny",
            "config_file_section": "",
            "config_item": "ALL",
            "desired_value": "ALL",
            "comment_character": "#",
            "delimiter": ":"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.5.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/hosts.deny file contains network information that is used by many system applications and therefore must be readable for these applications to operate. It is critical to ensure that the /etc/hosts.deny file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.5.5 Verify Permissions on /etc/hosts.deny",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "If the permissions of the /etc/hosts.deny file are incorrect, run the following command to correct them:\n/bin/chmod 644 /etc/hosts.deny",
            "files": "/etc/hosts.deny",
            "acls": "644"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.5.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in-sequence delivery. If the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.6.1 Disable DCCP",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# echo \"install dccp /bin/true\" >> /etc/modprobe.d/CIS.conf",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^.*install\\s*dccp\\s*\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.6.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP. If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.6.2 Disable SCTP",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# echo \"install sctp /bin/true\" >> /etc/modprobe.d/CIS.conf",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^.*install\\s*sctp\\s*\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.6.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation. If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.6.3 Disable RDS",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# echo \"install rds /bin/true\" >> /etc/modprobe.d/CIS.conf",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^.*install\\s*rds\\s*\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.6.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes. If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.6.4 Disable TIPC",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# echo \"install tipc /bin/true\" >> /etc/modprobe.d/CIS.conf",
            "files": "/etc/modprobe.d/CIS.conf",
            "present": true,
            "patterns": "^.*install\\s*tipc\\s*\\/bin\\/true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.6.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "IPtables is an application that allows a system administrator to configure the IP tables, chains and rules provided by the Linux kernel firewall. The firewalld service provides a dynamic firewall allowing changes to be made at anytime without disruptions cause by reloading. A firewall provides extra protection for the Linux system by limiting communications in and out of the box to specific addresses and ports.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "4.7 Enable firewalld",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl enable firewalld",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "4.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The rsyslog package is a third party package that provides many enhancements to syslog, such as multi-threading, TCP communication, message filtering and data base support. The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.1 Install the rsyslog package",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "process_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum install rsyslog",
            "processes": "rsyslogd",
            "present": "true"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The systemctl command can be used to ensure that the rsyslog service is turned on. If the rsyslog service is not activated the system will not have a syslog service running.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.2 Activate the rsyslog Service",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl enable rsyslog",
            "files": "/etc/rc3.d/S12rsyslog",
            "present": true
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/rsyslog.conf file specifies rules for logging and which files are to be used to log certain classes of messages. A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.3 Configure /etc/rsyslog.conf",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the following lines in the /etc/rsyslog.conf file as appropriate for your\nenvironment:\n\nauth,user.* /var/log/messages\nkern.* /var/log/kern.log\ndaemon.* /var/log/daemon.log\nsyslog.* /var/log/syslog\nlpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.* /var/log/unused.log\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "\\/var\\/log\\/messages"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the following lines in the /etc/rsyslog.conf file as appropriate for your\nenvironment:\n\nkern.* /var/log/kern.log\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "\\/var\\/log\\/kern\\.log"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the following lines in the /etc/rsyslog.conf file as appropriate for your\nenvironment:\n\ndaemon.* /var/log/daemon.log\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "\\/var\\/log\\/daemon\\.log"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the following lines in the /etc/rsyslog.conf file as appropriate for your\nenvironment:\n\nsyslog.* /var/log/syslog\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "\\/var\\/log\\/syslog"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the following lines in the /etc/rsyslog.conf file as appropriate for your\nenvironment:\n\nlpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.* /var/log/unused.log\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "\\/var\\/log\\/unused\\.log"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "A log file must already exist for rsyslog to be able to write to it. It is important to ensure that log files exist and have the correct permissions to ensure that sensitive rsyslog data is archived and protected.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.4 Create and Set Permissions on rsyslog Log Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For sites that have NOT implemented a secure admin group:\n\nCreate the /var/log/ directory and for each <logfile> listed in the /etc/rsyslog.conf file, perform the following commands:\n# touch <logfile>\n# chown root:root <logfile>\n# chmod og-rwx <logfile>\n\nFor sites that HAVE implemented a secure admin group:\n\nCreate the /var/log/ directory and for each <logfile> listed in the /etc/rsyslog.conf file, perform the following commands (where is the name of the security group):\n# touch <logfile>\n# chown root:<securegrp> <logfile>\n# chmod g-wx,o-rwx <logfile>",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead. Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.5 Configure rsyslog to Send Logs to a Remote Log Host",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/rsyslog.conf file and add the following line (where logfile.example.com is the name of your central log host).\n\n*.* @@loghost.example.com\n\n# Execute the following command to restart rsyslogd\n# pkill -HUP rsyslogd\n\nNote: The double \"at\" sign (@@) directs rsyslog to use TCP to send log messages to the server, which is a more reliable tracsport mechanism than the default UDP protocol.",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "^\\*\\.\\*\\s+@@\\S*"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port. The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.1.6 Accept Remote rsyslog Messages Only on Designated Log Hosts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "On hosts that are designated as log hosts edit the /etc/rsyslog.conf file and un-comment the following lines:\n$ModLoad imtcp.so\n$InputTCPServerRun 514\nNote: On hosts that are not designated log hosts these lines should be commented out instead.\n\nExecute the following command to restart rsyslogd:\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "^\\$InputTCPServerRun\\s+514"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "On hosts that are designated as log hosts edit the /etc/rsyslog.conf file and un-comment the following lines:\n$ModLoad imtcp.so\n$InputTCPServerRun 514\nNote: On hosts that are not designated log hosts these lines should be commented out instead.\n\nExecute the following command to restart rsyslogd:\n# pkill -HUP rsyslogd",
            "files": "/etc/rsyslog.conf",
            "present": true,
            "patterns": "^\\$ModLoad\\s+imtcp.so"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.1.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started. It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.1.1 Configure Audit Log Storage Size",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the max_log_file parameter in /etc/audit/auditd.conf\n\nmax_log_file = <MB>\n\nNOTE: <MB> is the number of MegaBytes the file can be.",
            "files": "/etc/audit/auditd.conf",
            "present": true,
            "patterns": "^max_log_file\\s+="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The auditd daemon can be configured to halt the system when the audit logs are full. In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.1.2 Disable System on Audit Log Full",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/auditd.conf file.\n\nspace_left_action = email",
            "files": "/etc/audit/auditd.conf",
            "present": true,
            "patterns": "space_left_action\\s+=\\s+email"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/auditd.conf file.\n\naction_mail_acct = root",
            "files": "/etc/audit/auditd.conf",
            "present": true,
            "patterns": "action_mail_acct\\s+=\\s+root"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/auditd.conf file.\n\nadmin_space_left_action = halt",
            "files": "/etc/audit/auditd.conf",
            "present": true,
            "patterns": "admin_space_left_action\\s+=\\s+halt"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Normally, auditd will hold 4 logs of maximum log file size before deleting older log files. In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.1.3 Keep All Auditing Information",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/audit/auditd.conf file.\n\nmax_log_file_action = keep_logs",
            "files": "/etc/audit/auditd.conf",
            "present": true,
            "patterns": "max_log_file_action\\s+=\\s+keep_logs"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.1.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Turn on the auditd daemon to record system events. The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.2 Enable auditd Service",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl enable auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Configure grub so that processes that are capable of being audited can be audited even if they start up prior to auditd startup. Audit events need to be captured on processes that start up prior to auditd, so that potential malicious activity cannot go undetected.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.3 Enable Auditing for Processes That Start Prior to auditd",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit /etc/default/grub to include audit=1 as part of GRUB_CMDLINE_LINUX:\n\nGRUB_CMDLINE_LINUX=\"audit=1\"\n\nAnd run the following command to update the grub configuration:\n\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
            "files": "/etc/default/grub",
            "present": true,
            "patterns": "^GRUB_CMDLINE_LINUX\\s*=\\s*\".*audit\\s*=\\s*1"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\" Unexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.4 Record Events That Modify Date and Time Information",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n# Execute the following command to restart auditd\n# pkill -P 1 -HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n# Execute the following command to restart auditd\n# pkill -P 1 -HUP auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file. Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.5 Record Events That Modify User/Group Information",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/group\\s+\\-p\\s+wa\\s+\\-k\\s+identity"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/passwd -p wa -k identity\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/passwd\\s+\\-p\\s+wa\\s+\\-k\\s+identity"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/gshadow -p wa -k identity\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/gshadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/shadow -p wa -k identity\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/shadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/security/opasswd -p wa -k identity\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/security\\/opasswd\\s+\\-p\\s+wa\\s+\\-k\\s+identity"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.5"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the system's host name) or setdomainname (set the system's domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files. Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.6 Record Events That Modify the System's Network Environment",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Monitor SELinux mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux directory. Changes to files in this directory could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.7 Record Events That Modify the System's Mandatory Access Controls",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to /etc/audit/audit.rules:\n-w /etc/selinux/ -p wa -k MAC-policy\n\nExecute the following coomand to restart auditd\npkill -P 1-HUP auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/selinux\\/\\s+\\-p\\s+wa\\s+\\-k\\s+MAC\\-policy"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.7"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier \"logins.\" Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.8 Collect Login and Logout Events",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/faillog -p wa -k logins\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/var\\/log\\/faillog\\s+\\-p\\s+wa\\s+\\-k\\s+logins"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/lastlog -p wa -k logins\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/var\\/log\\/lastlog\\s+\\-p\\s+wa\\s+\\-k\\s+logins"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/tallylog -p wa -k logins\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/var\\/log\\/tallylog\\s+\\-p\\s+wa\\s+\\-k\\s+logins"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.8"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit records will be tagged with the identifier \"session.\" Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.9 Collect Session Initiation Information",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/run/utmp -p wa -k session\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nNOTE: Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/var\\/run\\/utmp\\s+\\-p\\s+wa\\s+\\-k\\s+session"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/wtmp -p wa -k session\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nNOTE: Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/log\\/run\\/wtmp\\s+\\-p\\s+wa\\s+\\-k\\s+session"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/btmp -p wa -k session\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nNOTE: Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/log\\/run\\/btmp\\s+\\-p\\s+wa\\s+\\-k\\s+session"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.9"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\" Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.10 Collect Discretionary Access Control Permission Modification Events",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \\\nlremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \\\nlremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 \\\n-F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \\\nlremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.10"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (creat), opening (open, openat) and truncation (truncate, ftruncate) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\" Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.11 Collect Unsuccessful Unauthorized Access Attempts to Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \\\n-F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.11"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor privileged programs (those that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands. Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.12 Collect Use of Privileged Commands",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "To remediate this issue, the system administrator will have to execute a find command to locate all the privileged programs and then add an audit line for each one of them. The audit parameters associated with this are as follows:\n\n-F path=\"\" $1 \"\" - will populate each file name found through the find command and processed by awk.\n-F perm=x - will write an audit record if the file is executed.\n-F auid>=1000 - will write a record if the user executing the command is not a privileged user.\n-F auid!= 4294967295 - will ignore Daemon events\n\nAll audit records will be tagged with the identifier \"privileged.\"\n\n# find PART -xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print  \"\"-a always,exit -F path=\"\" $1 \"\" -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged\"\" }'\n\nNext, add those lines to the /etc/audit/audit.rules file.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.12"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor the use of the mount system call. The mount (and umount) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open, creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document. \n NOTE: This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS)",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.13 Collect Successful File System Mounts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.13"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\". Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.14 Collect File Deletion Events by User",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "At a minimum, configure the audit system to collect file deletion events for all users and root.\n\nFor 64 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 \\\n-F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 \\\n-F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 \\\n-F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.14"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\" Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.15 Collect Changes to System Administration Scope (sudoers)",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/audit/audit.rules file:\n-w /etc/sudoers -p wa -k scope\n\n# Execute the following command to restart auditd\npkill -HUP -P 1 auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/etc\\/sudoers\\s+\\-p\\s+wa\\s+\\-k\\s+scope"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.15"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log. Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log. Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.16 Collect System Administrator Actions (sudolog)",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/audit/audit.rules file:\n-w /var/log/sudo.log -p wa -k actions\n\n#Execute the following command to restart auditd\npkill -HUP -P 1 auditd",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-w\\s+\\/var\\/log\\/sudo\\.log\\s+\\-p\\s+wa\\s+\\-k\\s+actions"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.16"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\". Monitoring the use of insmod, rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.17 Collect Kernel Module Loading and Unloading",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFOR 32 BIT SYSTEMS, ADD\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFOR 64 BIT SYSTEMS, ADD\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.17"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Set system audit so that audit rules cannot be modified with auditctl. Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot. In immutable mode, unauthorized users cannot execute changes to the audit system to potential hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.2.18 Make the Audit Configuration Immutable",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Add the following line to the /etc/audit/audit.rules file:\n-e 2\n\nNote: This must be the last entry in the /etc/audit/audit.rules file.",
            "files": "/etc/audit/audit.rules",
            "present": true,
            "patterns": "^\\-e\\s+2\\s*$"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.2.18"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageable large. The file /etc/logrotate.d/syslog is the configuration file used to rotate log files created by syslog or rsyslog. These files are rotated on a weekly basis via a cron job and the last 4 weeks are kept. By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "5.3 Configure logrotate",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include appropriate system logs:\n /var/log/messages /var/log/secure /var/log/maillog /var/log/spooler /var/log/boot.log /var/log/cron",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/messages"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include: /var/log/secure",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/secure"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include: /var/log/maillog",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/maillog"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include: /var/log/spooler",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/spooler"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include: /var/log/boot.log",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/boot\\.log"
          },
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/logrotate.d/syslog file to include: /var/log/cron",
            "files": "/etc/logrotate.d/syslog",
            "present": true,
            "patterns": "\\/var\\/log\\/cron"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "5.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The anacron daemon is used on systems that are not up 24x7. The anacron daemon will execute jobs that would have normally been run had the system not been down. Cron jobs may include critical security or administrative functions that need to run on a regular basis. Use this daemon on machines that are not up 24x7, or if there are jobs that need to be executed after the system has been brought back up after a maintenance window.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.1 Enable anacron Daemon",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# yum install cronie-anacron",
            "files": "this_is_a_placeholder_file",
            "present": true
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.1"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The crond daemon is used to execute batch jobs on the system. While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run and crond is used to execute them.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.2 Enable crond Daemon",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# systemctl enable crond",
            "files": "this_is_a_placeholder_file",
            "present": true
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/anacrontab file is used by anacron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and is the only user that can read and write the file. This file contains information on what system jobs are run by anacron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.3 Set User/Group Owner and Permission on /etc/anacrontab",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/anacrontab",
            "files": "/etc/anacrontab",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/anacrontab",
            "files": "/etc/anacrontab",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/anacrontab",
            "files": "/etc/anacrontab",
            "acls": "*00"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make here sure that root is the user and group owner of the file and is the only user that can read and write the file. This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.4 Set User/Group Owner and Permission on /etc/crontab",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/crontab",
            "files": "/etc/crontab",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/crontab",
            "files": "/etc/crontab",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/crontab",
            "files": "/etc/crontab",
            "acls": "*00"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.5 Set User/Group Owner and Permission on /etc/cron.hourly",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "directory_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.hourly",
            "files": "/etc/cron.hourly",
            "acls": "*00"
          },
          {
            "object_type": "directory_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.hourly",
            "files": "/etc/cron.hourly",
            "owned_by": "root"
          },
          {
            "object_type": "directory_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.hourly",
            "folders": "/etc/cron.hourly",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.6 Set User/Group Owner and Permission on /etc/cron.daily",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "directory_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.daily",
            "files": "/etc/cron.daily",
            "acls": "*00"
          },
          {
            "object_type": "directory_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.daily",
            "folders": "/etc/cron.daily",
            "owned_by": "root"
          },
          {
            "object_type": "directory_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.daily",
            "files": "/etc/cron.daily",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.7 Set User/Group Owner and Permission on /etc/cron.weekly",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "directory_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.weekly",
            "files": "/etc/cron.weekly",
            "acls": "*00"
          },
          {
            "object_type": "directory_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.weekly",
            "folders": "/etc/cron.weekly",
            "owned_by": "root"
          },
          {
            "object_type": "directory_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.weekly",
            "files": "/etc/cron.weekly",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.7"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.8 Set User/Group Owner and Permission on /etc/cron.monthly",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "directory_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.monthly",
            "files": "/etc/cron.monthly",
            "acls": "*00"
          },
          {
            "object_type": "directory_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.monthly",
            "folders": "/etc/cron.monthly",
            "owned_by": "root"
          },
          {
            "object_type": "directory_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.monthly",
            "files": "/etc/cron.monthly",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.8"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory. Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.9 Set User/Group Owner and Permission on /etc/cron.d",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "directory_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.d",
            "files": "/etc/cron.d",
            "acls": "*00"
          },
          {
            "object_type": "directory_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.d",
            "folders": "/etc/cron.d",
            "owned_by": "root"
          },
          {
            "object_type": "directory_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.d",
            "files": "/etc/cron.d",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.9"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The at daemon works with the cron daemon to allow non-privileged users to submit one time only jobs at their convenience. There are two files that control at: /etc/at.allow and /etc/at.deny. If /etc/at.allow exists, then users listed in the file are the only ones that can create at jobs. If /etc/at.allow does not exist and /etc/at.deny does exist, then any user on the system, with the exception of those listed in /etc/at.deny, are allowed to execute at jobs. An empty /etc/at.deny file allows any user to create at jobs. If neither /etc/at.allow nor /etc/at.deny exist, then only superuser can create at jobs. The commands below remove the /etc/at.deny file and create an empty /etc/at.allow file that can only be read and modified by user and group root. Granting write access to this directory for non-privileged users could provide them the means to gain unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls. In addition, it is a better practice to create a white list of users who can execute at jobs versus a blacklist of users who can't execute at jobs as a system administrator will always know who can create jobs and does not have to worry about remembering to add a user to the blacklist when a new user id is created.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.10 Restrict at Daemon",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# rm /etc/at.deny",
            "files": "/etc/at.deny",
            "present": false
          },
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# touch /etc/at.allow",
            "files": "/etc/at.allow",
            "present": true
          },
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/at.allow",
            "files": "/etc/at.allow",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/at.allow",
            "files": "/etc/at.allow",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/at.allow",
            "files": "/etc/at.allow",
            "acls": "*00"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.10"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs. On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.1.11 Restrict at/cron to Authorized Users",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# /bin/rm /etc/cron.deny\n# /bin/rm /etc/at.deny",
            "files": "/etc/cron.deny, /etc/at.deny",
            "present": false
          },
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# touch /etc/cron.allow\n# touch /etc/at.allow",
            "files": "/etc/cron.allow, /etc/at.allow",
            "present": true
          },
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.allow\n# chown root:root /etc/at.allow",
            "files": "/etc/cron.allow, /etc/at.allow",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/cron.allow\n# chown root:root /etc/at.allow",
            "files": "/etc/cron.allow, /etc/at.allow",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod og-rwx /etc/cron.allow\n# chmod og-rwx /etc/at.allow",
            "files": "/etc/cron.allow, /etc/at.allow",
            "acls": "*00"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.1.11"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "SSH supports two different and incompatible protocols: SSH1 and SSH2. SSH1 was the original protocol and was subject to security issues. SSH2 is more advanced and secure. SSH v1 suffers from insecurities that do not affect SSH v2.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.1 Set SSH Protocol to 2",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nProtocol 2",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "Protocol",
            "desired_value": "2",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The INFO parameter specifies that login and logout activity will be logged. SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically _not_ recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information. INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.2 Set LogLevel to INFO",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nLogLevel INFO",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "LogLevel",
            "desired_value": "INFO",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root. The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.3 Set Permissions on /etc/ssh/sshd_config",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the user and group ownership of the /etc/ssh/sshd_config file are incorrect, run the following command to correct them:\n# chown root:root /etc/ssh/sshd_config\n\nIf the permissions are incorrect, run the following command to correct them:\n# chmod 600 /etc/ssh/sshd_config",
            "files": "/etc/ssh/sshd_config",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/ssh/sshd_config",
            "files": "/etc/ssh/sshd_config",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod 600 /etc/ssh/sshd_config",
            "files": "/etc/ssh/sshd_config",
            "acls": "600"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections. Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.4 Disable SSH X11 Forwarding",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nX11Forwarding no",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "X11Forwarding",
            "desired_value": "no",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure. Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, it is set the number based on site policy.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.5 Set SSH MaxAuthTries to 4 or Less",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nMaxAuthTries 4",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "MaxAuthTries",
            "desired_value": "4",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication. Setting this parameter forces users to enter a password when authenticating with ssh.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.6 Set SSH IgnoreRhosts to Yes",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nIgnoreRhosts yes",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "IgnoreRhosts",
            "desired_value": "yes",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2. Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection .",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.7 Set SSH HostbasedAuthentication to No",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nHostbasedAuthentication no",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "HostbasedAuthentication",
            "desired_value": "no",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.7"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PermitRootLogin parameter specifies if the root user can log in using ssh(1). The default is no. Disallowing root logins over SSH requires server admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.\n\n[Halo NOTE: This is a dangerous rule if you're using cloud services that provision servers with default root remote access. If you disable PermitRootLogin, you may not be able to access your systems.]",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.8 Disable SSH Root Login",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nPermitRootLogin no",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "PermitRootLogin",
            "desired_value": "no",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.8"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PermitEmptyPasswords parameter specifies if the server allows login to accounts with empty password strings. Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.9 Set SSH PermitEmptyPasswords to No",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nPermitEmptyPasswords no",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "PermitEmptyPasswords",
            "desired_value": "no",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.9"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PermitUserEnvironment option allows users to present environment options to the ssh daemon. Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojaned programs).",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.10 Do Not Allow Users to Set Environment Options",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nPermitUserEnvironment no",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "PermitUserEnvironment",
            "desired_value": "no",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.10"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "This variable limits the types of ciphers that SSH can use during communication. Based on research conducted at various institutions, it was determined that the symmetric portion of the SSH Transport Protocol (as described in RFC 4253) has security weaknesses that allowed recovery of up to 32 bits of plaintext from a block of ciphertext that was encrypted with the Cipher Block Chaining (CBC) method. From that research, new Counter mode algorithms (as described in RFC4344) were designed that are not vulnerable to these types of attacks and these algorithms are now recommended for standard use.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.11 Use Only Approved Cipher in Counter Mode",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nCiphers aes128-ctr,aes192-ctr,aes256-ctr",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "Ciphers",
            "desired_value": "aes128-ctr,aes192-ctr,aes256-ctr",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.11"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. When the ClientAliveInterval variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the ClientAliveCountMax variable is set, sshd will send client alive messages at every ClientAliveInterval interval. When the number of consecutive client alive messages are sent with no response from the client, the ssh session is terminated. For example, if the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time. Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening..  \n While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for ClientAliveCountMax is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.12 Set Idle Timeout Interval for User Login",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nClientAliveInterval 300",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "ClientAliveInterval",
            "desired_value": "300",
            "comment_character": "#",
            "delimiter": ""
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nClientAliveCountMax 0",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "ClientAliveCountMax",
            "desired_value": "0",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.12"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least of the following options be leveraged: \n AllowUsers\n \n The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of comma separated user names. Numeric userIDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.\n \n AllowGroups\n \n The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of comma separated user names. Numeric groupIDs are not recognized with this variable.\n \n DenyUsers\n \n The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of comma separated user names. Numeric userIDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.\n \n DenyGroups\n \n The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of comma separated group names. Numeric groupIDs are not recognized with this variable. Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.13 Limit Access via SSH",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set one or more of the parameters, where the parameter in angle brackets is a list of users or groups as indicated:\nAllowUsers <userlist>\nAllowGroups <grouplist>\nDenyUsers <userlist>\nDenyGroups <grouplist>",
            "files": "/etc/ssh/sshd_config",
            "present": true,
            "patterns": "^[AD][le][ln][oy][wUG][UGsr][sreo][eoru][rusp][sp]*"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.13"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed. Banners are used to warn connecting users of the particular site's policy regarding connection. Consult with your legal department for the appropriate warning banner for your site.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.2.14 Set SSH Banner",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\nBanner /etc/issue.net",
            "config_file_path": "/etc/ssh/sshd_config",
            "config_file_section": "",
            "config_item": "Banner",
            "desired_value": "/etc/issue.net",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.2.14"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm). All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm. The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords. \n Note that these change only apply to accounts configured on the local system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.3.1 Upgrade Password Hashing Algorithm to SHA-512",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Perform the following to configure the system as recommended:\n\n# authconfig --passalgo=sha512 --update\n\nNOTE: If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all userID's be immediately expired and forced to change their passwords on next login. To accomplish that, the following commands can be used. Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems.\n\n# cat /etc/passwd | awk -F: '( $3 >=1000 && $1 != \"nfsnobody\" ) { print $1 }' | xargs -n 1 chage -d 0",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.3.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The pam_pwquality module checks of the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options. \n * try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.\n * retry=3 - Allow 3 tries before sending back a failure.\n \n The following options are set in the /etc/security/pwquality.conf file:\n \n * minlen=14 - password must be 14 characters or more\n * dcredit=-1 - provide at least 1 digit\n * ucredit=-1 - provide at least one uppercase character\n * ocredit=-1 - provide at least one special character\n * lcredit=-1 - provide at least one lowercase character\n \n The setting shown above is one possible policy. Alter these values to conform to your own organization's password policies. Strong passwords protect systems from being hacked through brute force methods.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.3.2 Set Password Creation Requirement Parameters Using pam_cracklib",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the pam_pwquality.so parameters as follows in /etc/pam.d/system-auth:\n# password requisite pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=\n\nSet the following settings in /etc/security/pwquality.conf:\n\nminlen=14 \ndcredit=-1 \nucredit=-1 \nocredit=-1 \nlcredit=-1",
            "files": "/etc/pam.d/system-auth",
            "present": true,
            "patterns": "^password\\s+requisite\\s+pam_pwquality\\.so\\s+"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.3.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Lock out userIDs after _n_ unsuccessful consecutive login attempts. The first sets of changes are made to the main PAM configuration files /etc/pam.d/system-auth and /etc/pam.d/password-auth. The second set of changes are applied to the program specific PAM configuration file (in this case, the ssh daemon). The second set of changes must be applied to each program that will lock out userID's. \n Set the lockout number to the policy in effect at your site. Locking out userIDs after _n_ unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.3.3 Set Lockout for Failed Password Attempts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/pam.d/password-auth and /etc/pam.d/system-auth files and add the \"auth\" lines as highlighted below:\n\nauth required pam_env.so\nauth required pam_faillock.so preauth audit silent deny=5 unlock_time=900\nauth [success=1 default=bad] pam_unix.so\nauth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900\nauth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=900\nauth required pam_deny.so",
            "files": "/etc/pam.d/system-auth, /etc/pam.d/password-auth",
            "present": true,
            "patterns": "^auth.+pam_faillock\\.so"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.3.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password. \n Note that these change only apply to accounts configured on the local system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.3.4 Limit Password Reuse",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the pam_unix.so remember parameter to 5 in /etc/pam.d/system-auth:\n\npassword sufficient pam_unix.so remember=5",
            "files": "/etc/pam.d/system-auth",
            "present": true,
            "patterns": "^password\\s+sufficient\\s+pam_unix\\.so\\s+remember\\s*=\\s*5"
          },
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Make sure /etc/security/opasswd file exists",
            "files": "/etc/security/opasswd",
            "present": true
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.3.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The file /etc/securetty contains a list of valid terminals that may be logged in directly as root. Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.4 Restrict root Login to System Console",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Remove entries for any consoles that are not in a physically secure location.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in the wheel group to execute su. Restricting the use of su, and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo, whereas su can only record that a user executed the su program.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "6.5 Restrict Access to the su Command",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Set the pam_wheel.so parameters as follows in /etc/pam.d/su: \nauth required pam_wheel.so use_uid\n\nSet the proper list of users to be included in the wheel group in /etc/groups",
            "files": "/etc/pam.d/su",
            "present": true,
            "patterns": "^auth\\s+required\\s+pam_wheel\\.so\\s+use_uid"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "6.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 90 days. The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.1.1 Set Password Expiration Days",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the PASS_MAX_DAYS parameter to 90 in /etc/login.defs: \nPASS_MAX_DAYS 90\n\nModify active user parameters to match:\n# chage --maxdays 90 <user>",
            "config_file_path": "/etc/login.defs",
            "config_file_section": "",
            "config_item": "PASS_MAX_DAYS",
            "desired_value": "90",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 7 or more days. By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.1.2 Set Password Change Minimum Number of Days",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the PASS_MIN_DAYS parameter to 7 in /etc/login.defs:\nPASS_MIN_DAYS 7\n\nModify active user parameters to match:\n# chage --mindays 7 <user>",
            "config_file_path": "/etc/login.defs",
            "config_file_section": "",
            "config_item": "PASS_MIN_DAYS",
            "desired_value": "7",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days. Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.1.3 Set Password Expiring Warning Days",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs:\nPASS_WARN_AGE 7\n\nModify active user parameters to match:\n# chage --warndays 7 <user>",
            "config_file_path": "/etc/login.defs",
            "config_file_section": "",
            "config_item": "PASS_WARN_AGE",
            "desired_value": "7",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.1.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "There are a number of accounts provided with the CentOS that are used to manage applications and are not intended to provide an interactive shell. It is important to make sure that accounts that are not being used by regular users are locked to prevent them from being used to provide an interactive shell. By default, CentOS sets the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to /sbin/nologin. This prevents the account from potentially being used to run any commands.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.2 Disable System Accounts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Accounts that have been locked are prohibited from running commands on the system. Such accounts are not able to login to the system nor are they able to use scheduled execution facilities such as cron. To make sure system accounts cannot be accessed, using the following script:\n\n#!/bin/bash\nfor user in `awk -F: '($3 < 1000) {print $1 }' /etc/passwd`; do\n if [ $user != \"root\" ]\n then\n /usr/sbin/usermod -L $user\n if [ $user != \"sync\" ] && [ $user != \"shutdown\" ] && [ $user != \"halt\" ]\n then\n /usr/sbin/usermod -s /sbin/nologin $user\n fi\n fi\ndone",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user. Using GID 0 for the _root_ account helps prevent _root_-owned files from accidentally becoming accessible to non-privileged users.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.3 Set Default Group for root Account",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# usermod -g 0 root",
            "files": "/etc/passwd",
            "present": true,
            "patterns": "^root:x:0:0"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The default umask determines the permissions of files created by users. The user creating the file has the discretion of making their files and directories readable by others via the chmod command. Users who wish to allow their files and directories to be readable by others by default may choose a different default umask by inserting the umask command into the standard shell configuration files (.profile, .cshrc, etc.) in their home directories. Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system. \n NOTE: The directives in this section apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.4 Set Default umask for Users",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/bashrc and /etc/profile.d/cis.sh files (and the appropriate files for any other shell supported on your system) and add the following the UMASK parameter as shown:\numask 077",
            "config_file_path": "/etc/bashrc",
            "config_file_section": "",
            "config_item": "umask",
            "desired_value": "077",
            "comment_character": "#",
            "delimiter": ""
          },
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/bashrc and /etc/profile.d/cis.sh files (and the appropriate files for any other shell supported on your system) and add the following the UMASK parameter as shown:\numask 077",
            "config_file_path": "/etc/profile.d/cis.sh",
            "config_file_section": "",
            "config_item": "umask",
            "desired_value": "077",
            "comment_character": "#",
            "delimiter": ""
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 35 or more days be disabled. Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "7.5 Lock Inactive User Accounts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "configuration_file_setting",
            "active": true,
            "exportable": true,
            "suggestion": "# useradd -D -f 35",
            "config_file_path": "/etc/default/useradd",
            "config_file_section": "",
            "config_item": "INACTIVE",
            "desired_value": "35",
            "comment_character": "#",
            "delimiter": "="
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "7.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The contents of the /etc/issue file are displayed prior to the login prompt on the system's console and serial devices, and also prior to logins via telnet. The contents of the /etc/motd file is generally displayed after all successful logins, no matter where the user is logging in from, but is thought to be less useful because it only provides notification to the user after the machine has been accessed. Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "8.1 Set Warning Banner for Standard Login Services",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Consult with your organization's legal counsel for the appropriate wording for your specific organization. The following three files should be exist and have the appropriate banner text in them:\n/etc/motd\n/etc/issue\n/etc/issue.net",
            "files": "/etc/motd, /etc/issue, /etc/issue.net",
            "present": true
          },
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/motd\n# chown root:root /etc/issue\n# chown root:root /etc/issue.net",
            "files": "/etc/motd, /etc/issue, /etc/issue.net",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "# chown root:root /etc/motd\n# chown root:root /etc/issue\n# chown root:root /etc/issue.net",
            "files": "/etc/motd, /etc/issue, /etc/issue.net",
            "owned_by": "root"
          },
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "# chmod 644 /etc/motd\n# chmod 644 /etc/issue\n# chmod 644 /etc/issue.net",
            "files": "/etc/motd, /etc/issue, /etc/issue.net",
            "acls": "644"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "8.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information:  \n \\m - machine architecture (uname -m)\n \\r - operating system release (uname -r)\n \\s - operating system name\n \\v - operating system version (uname -v) Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \"uname -a\" command once they have logged in.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "8.2 Remove OS Information from Login Warning Banners",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Edit the /etc/motd, /etc/issue and /etc/issue.net files and remove any lines containing \\m, \\r, \\s or \\v.",
            "files": "/etc/motd, /etc/issue, /etc/issue.net",
            "present": false,
            "patterns": "\\\\[mrsv]"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "8.2"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The GNOME Display Manager is used for login session management. See the manual page gdm(1) for more information. The remediation action for this item sets a warning message for GDM users before they log in. Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "8.3 Set GNOME Warning Banner",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "# /bin/su -s /bin/sh gdm\n# gconftool-2 --direct --config-source=xml:readwrite:$HOME/.gconf --type bool --set /apps/gdm/simple-greeter/banner_message_enable true\n# gconftool-2 --direct --config-source=xml:readwrite:$HOME/.gconf --type string --set /apps/gdm/simple-greeter/banner_message_text \"Your-Login-Banner\"\n\nRestart gdm for these settings to take effect.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "8.3"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The RPM package manager has a number of useful options. One of these, the -V (or -verify) option, can be used to verify that system packages are correctly installed. The -V option can be used to verify a particular package or to verify all system packages (-Va). If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option: \n Code Meaning \n S File size differs. \n M File mode differs (includes permissions and file type). \n 5 The MD5 checksum differs. \n D The major and minor version numbers differ on a device file. \n L A mismatch occurs in a link. \n U The file ownership differs. \n G The file group owner differs. \n T The file time (mtime) differs. \n \n The rpm -qf command can be used to determine which package a particular file belongs to. For example the following command determines which package the /etc/passwd file belongs to:\n \n # rpm -qf /etc/passwd\n setup-2.5.58-7.el5 \n \n To verify the settings for the package that controls the /etc/passwd file, run the following:\n \n # rpm -V setup-2.5.58-7.el5\n .M...... c /etc/passwd\n S.5....T c /etc/printcap \n \n Note that you can feed the output of the rpm -qf command to the rpm -V command:\n \n # rpm -V `rpm -qf /etc/passwd`\n .M...... c /etc/passwd\n S.5....T c /etc/printcap It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.\n \n NOTE: Since packages and important files may change with new updates and releases, it is recommended to verify everything, not just a finite list of files. This can be a time consuming task and is therefore not a scored benchmark item, but is provided for those interested in additional security measures.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.1 Verify System File Permissions",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Correct any discrepancies found and rerun the command until output is clean or risk is mitigated or accepted.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate. It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.2 Verify Permissions on /etc/passwd",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "If the permissions of the /etc/passwd file are incorrect, run the following command to correct them:\n/bin/chmod 644 /etc/passwd",
            "files": "/etc/passwd",
            "acls": "644"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.3 Verify Permissions on /etc/shadow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "/bin/chmod 000 /etc/shadow",
            "files": "/etc/shadow",
            "acls": "000"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/gshadow file contains information about group accounts that is critical to the security of those accounts, such as the hashed password and other security information. If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as expiration) could also be useful to subvert the group accounts.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.4 Verify Permissions on /etc/gshadow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "If the permissions of the /etc/gshadow file are incorrect, run the following command to correct them:\n/bin/chmod 000 /etc/gshadow",
            "files": "/etc/gshadow",
            "acls": "000"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.4"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else. The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.5 Verify Permissions on /etc/group",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_acl",
            "active": true,
            "exportable": true,
            "suggestion": "If the permissions of the /etc/group file are incorrect, run the following command to correct them:\n/bin/chmod 644 /etc/group",
            "files": "/etc/group",
            "acls": "644"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/passwd file contains a list of all the valid userIDs defined in the system, but not the passwords. The command below sets the owner and group of the file to root. The /etc/passwd file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.6 Verify User/Group Ownership on /etc/passwd",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the user ownership of the /etc/passwd file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/passwd",
            "files": "/etc/passwd",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the group ownership of the /etc/passwd file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/passwd",
            "files": "/etc/passwd",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.6"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/shadow file contains the one-way cipher text passwords for each user defined in the /etc/passwd file. The command below sets the user and group ownership of the file to root. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.7 Verify User/Group Ownership on /etc/shadow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the user ownership of the /etc/shadow file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/shadow",
            "files": "/etc/shadow",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the group ownership of the /etc/shadow file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/shadow",
            "files": "/etc/shadow",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.7"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/gshadow file contains information about group accounts that is critical to the security of those accounts, such as the hashed password and other security information. If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as expiration) could also be useful to subvert the group accounts.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.8 Verify User/Group Ownership on /etc/gshadow",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the user ownership of the /etc/gshadow file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/gshadow",
            "files": "/etc/gshadow",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the group ownership of the /etc/gshadow file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/gshadow",
            "files": "/etc/gshadow",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.8"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else. The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.9 Verify User/Group Ownership on /etc/group",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_user_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the user ownership of the /etc/group file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/group",
            "files": "/etc/group",
            "owned_by": "root"
          },
          {
            "object_type": "file_group_ownership",
            "active": true,
            "exportable": true,
            "suggestion": "If the group ownership of the /etc/group file are incorrect, run the following command to correct them:\n/bin/chown root:root /etc/group",
            "files": "/etc/group",
            "owned_by": "root"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.9"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the chmod(2) man page for more information. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.10 Find World Writable Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Removing write access for the \"other\" category (chmod o-w <filename>) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.10"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system. A new user who is assigned the deleted user's user ID or group ID may then end up \"owning\" these files, and thus have more access on the system than was intended.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.11 Find Un-owned Files and Directories",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.11"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system. A new user who is assigned the deleted user's user ID or group ID may then end up \"owning\" these files, and thus have more access on the system than was intended.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.12 Find Un-grouped Files and Directories",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.12"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges. There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.13 Find SUID System Executables",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Ensure that no rogue set-UID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries as described below:\n\n# rpm -V `rpm -qf /usr/bin/sudo`\n....T /usr/bin/sudo\nSM5....T /usr/bin/sudoedit",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.13"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges. There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced. The following is an example of checking the \"sudo\" executable: \n # rpm -V `rpm -qf /usr/bin/sudo`\n .......T /usr/bin/sudo\n SM5....T /usr/bin/sudoedit",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.1.14 Find SGID System Executables",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Ensure that no rogue set-GID programs have been introduced into the system\n\n# /bin/rpm -V `/bin/rpm -qf sudo`",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.1.14"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "An account with an empty password field means that anybody may log in as that user without providing a password. All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.1 Ensure Password Fields are Not Empty",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "user_has_password",
            "active": true,
            "exportable": true,
            "suggestion": "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:\n# /usr/bin/passwd -l\n\nAlso, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.",
            "users": "ALL"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.1"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on CentOS 7 systems, but may exist in files that have been imported from other platforms. These entries may provide an avenue for attackers to gain privileged access on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.2 Verify No Legacy \"+\" Entries Exist in /etc/passwd File",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Delete these entries if they exist.",
            "files": "/etc/passwd",
            "present": false,
            "patterns": "^\\+:"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.2"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on CentOS 7 systems, but may exist in files that have been imported from other platforms. These entries may provide an avenue for attackers to gain privileged access on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.3 Verify No Legacy \"+\" Entries Exist in /etc/shadow File",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Delete these entries if they exist.",
            "files": "/etc/shadow",
            "present": false,
            "patterns": "^\\+:"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.3"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on CentOS 7 systems, but may exist in files that have been imported from other platforms. These entries may provide an avenue for attackers to gain privileged access on the system.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.4 Verify No Legacy \"+\" Entries Exist in /etc/group File",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Delete these entries if they exist.",
            "files": "/etc/group",
            "present": false,
            "patterns": "^\\+:"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.4"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Any account with UID 0 has superuser privileges on the system. This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 7.5 Restrict root Login to System Console.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.5 Verify No UID 0 Accounts Exist Other Than root",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Delete any other entries that are displayed.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.5"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly. Including the current working directory (.) or other writable directory in root's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.6 Ensure root PATH Integrity",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_files_have_no_unsafe_path_statements",
            "active": true,
            "exportable": true,
            "suggestion": "Correct or justify any items discovered in the Audit step.",
            "users": "ALL",
            "files": ".*"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.6"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.7 Check Permissions on User Home Directories",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.7"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "While the system administrator can establish secure permissions for users' \"dot\" files, the users can easily override these. Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.8 Check User Dot File Permissions",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.8"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these. .netrc files may contain unencrypted passwords that may be used to attack other systems.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.9 Check Permissions on User .netrc Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc file permissions and determine the action to be taken in accordance with site policy.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.9"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "While no .rhosts files are shipped with CentOS 7, users can easily create them. This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf. Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, they may have been brought over from other systems and could contain information useful to an attacker for those other systems.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.10 Check for Presence of User .rhosts Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "If any users have .rhosts files determine why they have them.",
            "users": "NOT: halt, sync, shutdown, saslauth, uucp, adm, ftp, gopher",
            "files": ".rhosts",
            "present": false
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.10"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group. Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.11 Check Groups in /etc/passwd",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.11"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "Users can be defined in /etc/passwd without a home directory or with a home directory does not actually exist. If the user's home directory does not exist or is unassigned, the user will be placed in \"/\" and will not be able to write any files or have local environment variables set.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.12 Check That Users Are Assigned Valid Home Directories",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_exists",
            "active": true,
            "exportable": true,
            "suggestion": "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without assigned should be removed or assigned a home directory as appropriate.",
            "users": "NOT: halt, sync, shutdown, saslauth, uucp, adm, ftp, gopher"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.12"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The user home directory is space defined for the particular user to set local environment variables and to store personal files. Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.13 Check User Home Directory Ownership",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_owned_by_correct_user",
            "active": true,
            "exportable": true,
            "suggestion": "Change the ownership any home directories that are not owned by the defined user to the correct user.",
            "users": "NOT: sync, sshd, postfix, vcsa, nobody, bin, daemon, games, operator, lp, mail, halt, shutdown"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.13"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field. Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.14 Check for Duplicate UIDs",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Based on the results of the script, establish unique UIDs and review all files owned by the shared UID to determine which UID they are supposed to belong to.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.14"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field. User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections. \n NOTE: In the case of extremely large groups it can become necessary to split a GID across group names due to character limits per line. Any such instances should be carefully audited, unless absolutely necessary such instances should be avoided.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.15 Check for Duplicate GIDs",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Based on the results of the script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.15"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Traditionally, UNIX systems establish \"reserved\" UIDs (0-999 range) that are intended for system accounts. If a user is assigned a UID that is in the reserved range, even if it is not presently in use, security exposures can arise if a subsequently installed application uses the same UID.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.16 Check That Reserved UIDs Are Assigned to System Accounts",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Based on the results of the script, change any UIDs that are in the reserved range to one that is in the user range. Review all files owned by the reserved UID to determine which UID they are supposed to belong to.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.16"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name. If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd. For example, if \"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use UID 1000. Effectively, the UID is shared, which is a security problem.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.17 Check for Duplicate User Names",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Based on the results of the script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.17"
          }
        ]
      },
      {
        "active": false,
        "alert": false,
        "comment": "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name. If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group. Effectively, the GID is shared, which is a security problem.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.18 Check for Duplicate Group Names",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "file_string_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Based on the results of the script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.",
            "files": "this_is_a_placeholder_file",
            "present": true,
            "patterns": "this_rule_has_not_been_implemented"
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.18"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The .netrc file contains data for logging into a remote host for file transfers via FTP. The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.19 Check for Presence of User .netrc Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy.",
            "users": "NOT: halt, sync, shutdown, saslauth, uucp, adm, ftp, gopher",
            "files": ".netrc",
            "present": false
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.18"
          }
        ]
      },
      {
        "active": true,
        "alert": false,
        "comment": "The .forward file specifies an email address to forward the user's mail to. Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions.",
        "critical": false,
        "rule_operator": "AND",
        "log": false,
        "name": "9.2.20 Check for Presence of User .forward Files",
        "taxonomy": "system_configuration",
        "checks": [
          {
            "object_type": "home_directory_file_presence",
            "active": true,
            "exportable": true,
            "suggestion": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy.",
            "users": "NOT: halt, sync, shutdown, saslauth, uucp, adm, ftp, gopher",
            "files": ".forward",
            "present": false
          }
        ],
        "reference_identifiers": [
          {
            "CIS": "9.2.20"
          }
        ]
      }
    ]
  }
}
